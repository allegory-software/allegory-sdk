#go@ plink d10 -t sh sdk/c/luajit/build
#go@ sh build
#!/bin/sh

gcc --version | grep gcc

cd "${0%build}" || exit 1

set -e
cd src/src || exit 1

build() {

	local CFLAGS="$CFLAGS \
		-msse4.2 \
		-DALLEGORY_BUILD \
		-DLUAJIT_ENABLE_GC64 \
		-DLUAJIT_ENABLE_LUA52COMPAT \
		-DLUA_PATH_DEFAULT='\"$LUA_PATH_DEFAULT\"' \
		-DLUA_CPATH_DEFAULT='\"$LUA_CPATH_DEFAULT\"' \
		-I. \
		"

	local B=../../../../bin/$P
	local J=$B/../../lua/jit

	rm -f $B/$X
	rm -f rm $B/$D

	make clean
	make HOST_CC=gcc amalg Q=" " \
		LDFLAGS="$LDFLAGS" \
		CFLAGS="$CFLAGS -DCOUNTS" \
		DASM_XFLAGS="$DASM_XFLAGS"

	[ "$X0" ] || X0=$X; cp -f $X0 $B/$X
	[ "$D0" ] || D0=$D; cp -f $D0 $B/$D

	mkdir -p $J
	cp -f jit/*.lua $J/
	cp -f jit/vmdef.lua $J/vmdef_$P.lua
	cp -f ../../vmdef.lua $J/vmdef.lua

	make clean
}

if [ "$OSTYPE" = "msys" ]; then
	LUA_PATH_DEFAULT="!\\\\..\\\\..\\\\lua\\\\?.lua" \
	LUA_CPATH_DEFAULT="!\\\\clib\\\\?.dll" \
	P=windows LDFLAGS="-static-libgcc" \
	X=luajit.exe D=lua51.dll A=luajit.a \
		build
elif [ "${OSTYPE#darwin}" != "$OSTYPE" ]; then
	echo NYI
else
	export LUA_PATH_DEFAULT="!/../../lua/?.lua"
	export LUA_CPATH_DEFAULT="!/clib/?.so"
	P=linux CFLAGS="-pthread -DCOUNTS" \
	LDFLAGS="-pthread -static-libgcc -Wl,--disable-new-dtags -Wl,-rpath,'\$\$ORIGIN'" \
	X=luajit D=libluajit.so A=libluajit.a \
		build
fi
