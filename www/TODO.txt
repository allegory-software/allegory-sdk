THINK
------------------------------------------------------------------------------

* INLINE-EDITABLE MODE FOR PRESENTATION-ONLY WIDGETS
	* HTML => HTML-INPUT
	* IMG => IMAGE
	* TEXT => EDITABLE TEXT

* AUTOCOMPLETE: use <datalist> and list attr and show a list picker with "Other..." button
	- use <datalist> and list attr and show a list picker with "Other..." button:
		- date/time dropdowns
		- num-input
		- input

* NAV EXLCLUSIVE EDIT MODE:
	- which widgets to disable when nav has unsaved changes ?


BUGS
------------------------------------------------------------------------------

* CSS
	- dim overrides bg-error

* NAV
	- params

* NAV
	- editing

* TOUCH SCREENS
	- problem with pointer capturing? tab dragging doesn't work.

* TOOLBOX
	- fix dragging with trackpad (no buttons, just touch)

* CALENDAR
	- updating state in redraw while dragging prevents:
		- tooltip from updating itself.
		- grid from updating itself.

* RANGE-DATE
	- merge errors from inputs

* BUTTON
	- Enter vs Space key (doesn't show :active on Enter wtf)

* SLIDER
	- range totally overlapped thumbs are hard to distinguish
		- min_range mitigates that when set.

* NAV revert bug (esp. tree)

* Safari 16.3 dumbass browser
	- will do more testing before release...


NEW WIDGETS
------------------------------------------------------------------------------

* MULTI-INPUT
	- html content is one or multiple rows inside <record> tags
	- <record duplicate=N> to duplicate a record. N can be 0.
	- [+] button to duplicate record underneath
	- [-] button to remove record
	- min & max number of records

* UPLOAD area/button with progress

* IMAGE
	- upload
	- download

* HTML-INPUT

* FIELDSET & LEGEND - style them

* SELECT-RADIO

* GRID-DROPDOWN

* PLACE-INPUT

* MONTH CALENDAR variation

* MONTH-INPUT


FEATURES
------------------------------------------------------------------------------

* DROPDOWN
	- set height to any one of the values in the list.

* TEXTAREA
	- max-len validator to show "X chars remaining" on a textarea.

* SPLIT % panes

* ALL INPUTS
	- borderless auto-growing mode.
	- undo/redo:
		TODO: all date/time inputs
		TODO: dropdown
		TODO: tags
		TODO: select-button?
		TODO: slider
	- readonly state
		DONE: num-input
	- represent null value
	- set null value
	- new, modified, deleted state

* INPUT-XBUTTON
	- put near an <input> (inside an <input-group> usually) to clear the value.

* SLIDER
	- list of marker values with labels (<datalist> ?)
	- current value num edit with <-> slide

* BUTTON
	- bring back the ^active event
		- can we force :active so we don't have to set .active?

* GRID
	- quick filters
	- checklist filters

* GRID inline editing of entire row (see chrome network throttling grid)

* NAV multi-nav params
	- params syntax: [nav_id.]field to map params from multiple navs
	- param_nav_id becomes optional then.
	- find a way to bind freestanding widgets too, based on id
		??? map a widget to a param name, which assigns global nav and that widget's
		field in the global nav; unmap when the field is removed from the nav.



* NAV data_nav: have a nav feed another with data so that we can have lookup dropdowns

* NAV copy selection to clipboard as csv (test paste in Excel)

* NAV paste csv at focused cell

* AUTH POPUP
	- (normal | large | xlarge) chooser
	- theme dropdown -> (light | dark)


MOBILE
------------------------------------------------------------------------------

* DEMO: make or adapt for mobile

* LIST
	- drag & drop
		- test tabs too

* SLIDES
	- swipe vert/horiz
	- slide effects


LATERZ
------------------------------------------------------------------------------
- ALL auto-urls
- ALL inherited props
	* prop attr: inherits_from: <prop_name>
	* needed for: nav, sql_db, ...
	* in a prop_change hook check parent and sync the prop with that of the parent
		add/remove the event hook when the prop is set/cleared
- NAV group-by aggregates
- NAV group-by "others" group
- NAV group-by % column
- NAV send a "rowset closed" request to server when a grid is unbound
- NAV rowset.server_order_by (shown in grid header grayed)
- NAV multi-col lookup
	- validation
	- lookup-list & dropdown
- BUTTON with menu or list dropdown
* INPUT save on typing with delay: field attr "save_on_input" true or false
- TABS pop-out button
- SPLIT context menu: vertical/horizontal, %/fixed
- CHART pie use % column and "others" group from nav
- CHART bar-stacks
- CHART area-stack (for a % column)
- CHART log scale
- CHART pie total radius & orientation (left/right/top/bottom)
- CHART master-detail with the second pie slice having the radius of
	the selected slice in the first pie (rotate the first pie so that
	the selected slice points to the detail slice).
- CHART sub-unit log-1024-based steps
- GRID drag-move row to other grid
- GRID put action bar on top, use bare buttons without labels (see jetbrain settings)
- GRID move impossibility
	* error notification: canâ€™t move row becuz
	* invalid icon over bad targets
- GRID give subtle visual feedback when refusing to enter edit mode because
	the cell is read-only
- GRID allow_exit_row: disable all other rows while editing
- GRID allow_exit_edit: disable all other cells while editing
- NAV entity names
	* what about translation? shouldn't this better be directly translatable?
	* change "record" to entity name in button labels, messages, etc.
	* add entity name to rowset too (infer plural)
	* add entity name to tables too (infer singular)
	* set 'label' prop
- LIST editing:
	* move hit area + grab hand
	* 3-dots icon for move area (left or right)
	* X button for removing item (left or right)
	* edit button for toggle enter/exit edit
	* button for add item
- TIMEZONE-PICKER widget: list of "TZN +/-NN Country".
- TIME-PICKER, TIME-INPUT, DATE-TIME-PICKER, DATE-TIME-INPUT: `with-timezone` attr.
	- `timezone` prop (value is a tz name).
	- value_timestamp changes depending on tz.
	- show local time somewhere too.



SECURITY
------------------------------------------------------------------------------
CSRF:
- no need for CRSF tokens, just send normal session cookie with `Secure; SameSite=Lax`.
- on the server just check that the `Origin` header matches a static string on POST.


