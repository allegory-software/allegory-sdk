/*

	Functional CSS library & reset.
	Written by Cosmin Apreutesei. Public Domain.

CSS CLASSES:
	TEXT          pre[-line] [x]small[er] [x]large tight [no-]bold italic underline strike allcaps noselect zwsp
	TEXT COLORS   gray label link fg-inverted
	ALIGN INLINE  t-{l r c j m t b bas sub sup} float-{l r}
	ALIGN FLEX    h-{l r c sb s t b m bl} v-{t b m sb s l r c} S[1-5] flex-[no]wrap order-{1 2 last}
	ALIGN GRID    grid-{l r c sb s t b m bl} {x y}{1-5} x..x y..y
	GAPS F,G      gap[0 025 05 075 2 4 8]
	ALIGN F,G     self-h-{t m b s} self-v-{l c r s}
	ALIGN F,G,B,A self-h-{l r c} self-v-{t b m}
	SIZING        nowrap shrinks
	BORDERS       b[0] b-{l r t b}[-0] b-{dotted dashed invisible fg}
	CORNERS       ro[05 075 0 2] ro-{l r t b}-0 round ro-group-{h v}
	PADDINGS      p[0 05 2 4 8] p-{l r t b x y}-{0 05 2 4 8}
	MARGINS       m[0 05 2 4 8] m-{l r t b x y}-{0 05 2 4 8} {ml mr mx}-auto
	OUTLINE       outline-focus no-outline
	OVERFLOW      [v h]scroll[-auto] [no]clip[-x -y] scroll-thin
	POSITIONING   rel abs z{1 2 3 4 5} overlay
	VISIBILITY    hidden skip click-through[-off]
	FLAT BGs      bg[1 2 -alt -smoke -fg] no-bg
	IMAGE BGs     bg-{cover contain center t r b l no-repeat repeat-{x y}}
	FILTERS       [in]visible [no-]dim op[0 1 01-09] darken lighten no-filter
	SHADOWS       shadow-{tooltip thumb menu button pressed modal toolbox} no-shadow
	TRANSFORMS    flip-{h v hv} rotate-{90 180 270}
	TRANSITIONS   ease ease-{01s 05s 1s} no-ease ease-out ease-fw
	ANIMATIONS    beat bounce fade beat-fade flip shake spin spin-pulse forever once reverse
	CURSORS       arrow hand grab grabbing
	FONTS         mono arial opensans[-condensed] inter
	MAT ICONS     mi[-round -sharp -outlined -fill -no-fill]
	FA ICONS      fa[r] fa-*
	INTERACTION   hover-{darken lighten b}

HTML SELECTORS:
	*[gray] *[nowrap]
	img[invertable]

NOTES:
	You must add the theme-light class to <html> for theme-inverted class to work!
	Specificity must be 0-1-0 on the @base layer, 0-2-0 on @state. Use :where() to control it.

*/

@layer sub-base, base, role, state, role-state, generic-state; /* matching divs.js layers */

@layer base {

:root, .theme-light, :where(.theme-dark) .theme-inverted {

	--fg             : hsl(0 0% 0%);
	--fg-inverted    : #fff;  /* text on dark or colored bg */
	--fg-p           : #444;  /* multiline text on normal backgrounds (just a tad less bright than labels) */
	--fg-gray        : #999;  /* faded text but clearly legible (disabled, info boxes) */
	--fg-gray-inverted : #ffffff66;  /* faded text on dark or colored bg */
	--fg-link        : hsl(222 100% 40%); /* anything clickable inside text: links, bare buttons, checkboxes */
	--fg-link-hover  : hsl(222 100% 45%);
	--fg-link-active : hsl(222 100% 55%);
	--fg-label       : #666; /* between fg and gray (edit labels, chart labels) */

	--bg             : #fff;
	--bg-hover       : #f8f8f8;
	--bg1            : #eee;    /* sits on bg */
	--bg2            : #aaa;    /* sits on bg1 */
	--bg2-hover      : #999;
	--bg-alt         : #f3f3f3; /* alternating bg for grid rows; must be lighter than bg1 */
	--bg-smoke       : #00000022;  /* overlays bg */
	--bg-input       : var(--bg);

	--border-light   : hsl(0 0% 90%); /* sits on bg */
	--border-hover   : hsl(0 0% 95%); /* sits on bg */
	--border-darker  : hsl(0 0% 80%); /* more visible than border */

	--border-radius-input       : 0;

	--outline-focused: hsl(0 %0 %0);

	--ring           : #00000055;

	--shadow-tooltip :  2px  2px  9px      #00000044;
	--shadow-toolbox :  1px  1px  4px      #000000aa;
	--shadow-menu    :  2px  2px  2px      #000000aa;
	--shadow-button  :  0px  0px  2px  0px #00000011;
	--shadow-modal   :  2px  5px 10px      #00000088;
	--shadow-pressed : inset 0 0.15em 0.3em hsl(210 13% 12% / 51);
	--shadow-picker  :  0px  5px 10px  1px #00000044; /* large fuzzy shadow */

	--bg-button                 : hsl(206 28% 95%);
	--bg-button-hover           : hsl(206 28% 90%);
	--bg-button-pressed         : hsl(206 28% 85%);
	--fg-button                 : var(--fg-inverted);
	--border-button-primary     : hsl(134 61% 33%);
	--bg-button-danger          : var(--bg-button);
	--bg-button-danger-hover    : var(--bg-button-hover);
	--bg-button-danger-pressed  : var(--bg-button-pressed);
	--fg-button-danger          : hsl(0 54% 43%); /* red fg */

	--fg-search       : var(--fg);  /* quicksearch text over quicksearch bg */
	--bg-search       : #ff9;  /* quicksearch text bg */
	--bg-info         : #069;  /* info bubbles */
	--fg-info         : var(--fg-inverted);
	--bg-error        : #a33; /* invalid inputs and error bubbles */
	--fg-error        : var(--fg-inverted);
	--bg-warn         : #ffa500; /* warning bubbles */
	--fg-warn         : var(--fg);

	/* grid cell data states */
	--bg-new          : #eeeeff;
	--bg-modified     : #ddffdd;
	--bg-new-modified : #ccf0f0;

	/* grid cell interaction states. these need to be opaque! */
	--bg-unfocused          : #999;
	--bg-focused            : #ddd;
	--bg-unfocused-selected : #333;
	--fg-unfocused-selected : var(--fg-inverted);
	--bg-focused-selected   : #258;
	--bg-focused-error      : #f33;
	--bg-unselected         : #888;
	--bg-selected           : #69c;
	--fg-selected           : var(--fg-inverted);
	--fg-focused            : var(--fg-inverted);
	--bg-row-focused        : #ddd;

	font-size        : var(--font-size-normal);
	color            : var(--fg);
	background-color : var(--bg);
}

.theme-dark, :where(.theme-light) .theme-inverted {

	--fg             : hsl(0 0% 100%);
	--fg-inverted    : hsl(0 0% 100%);
	--fg-p           : hsl(0 0% 90%);
	--fg-gray        : #ffffff66;
	--fg-gray-inverted : var(--fg-gray);
	--fg-link        : hsl(140 100% 30%);
	--fg-link-hover  : hsl(140 100% 35%);
	--fg-link-active : hsl(140 100% 40%);
	--fg-label       : #aaa;

	--bg             : hsl(216 28% 7%);
	--bg1            : hsl(216 28% 15%);
	--bg2            : hsl(216 28% 19%);
	--bg2-hover      : hsl(216 28% 22%);
	--bg-alt         : hsl(216 28% 10%);
	--bg-smoke       : #ffffff22;
	--bg-input       : hsl(0 0% 0%);

	--border         : hsl(0 0% 20%);
	--border-hover   : hsl(0 0% 50%);

	--outline-focused: #999;

	--shadow-pressed : inset 0 .15em .5em hsl(228 32% 15% / 46%);

	--bg-button                 : hsl(215 15% 15%);
	--bg-button-hover           : hsl(215 15% 24%);
	--bg-button-pressed         : hsl(215 16% 30%);

	--border-button-primary     : hsl(134 61% 43%);
	--bg-button-danger          : var(--bg-button);
	--bg-button-danger-hover    : var(--bg-button-hover);
	--bg-button-danger-pressed  : var(--bg-button-pressed);
	--fg-button-danger          : hsl(0 54% 43%);

	/* grid cell data states */
	--bg-new               : #2c2c5c;
	--bg-modified          : #196119;
	--bg-new-modified      : #293b34;

	/* grid cell interaction states. these need to be opaque! */
	--bg-unfocused-selected : #4c545d;
	--bg-unfocused          : #2e3033;
	--bg-unselected         : #1d2021;
	--bg-selected           : #122f4d;
	--bg-row-focused        : #222326;

	color-scheme: dark; /* because Chrome's custom scrollbars look like crap */

	font-size        : var(--font-size-normal);
	color            : var(--fg);
	background-color : var(--bg);
}

:root {
	--space-025 : .125rem;
	--space-05  :  .25rem;
	--space-075 : .375rem;
	--space-1   :   .5rem;
	--space-2   :  .75rem;
	--space-4   :    1rem;
	--space-8   :    2rem;

	--font-size-normal : 14px;

	--font-size-xsmall  : .72rem;    /* 10/14 */
	--font-size-small   : .8125rem;  /* 12/14 */
	--font-size-smaller : .875rem;   /* 13/14 */
	--font-size-large   : 1.125rem;  /* 16/14 */
	--font-size-xlarge  : 1.5rem;
	--font-size-h1      : 2em;
	--font-size-h2      : 1.5em;
	--font-size-h3      : 1.3em;

	--font-baseline-adjust-ff: 0; /* set this to 1 depending on font */
}

.theme-small {
	--font-size-normal : 12px;
}

.theme-large {
	--font-size-normal : 16px;
}

:root {
	font-size        : var(--font-size-normal);
	color            : var(--fg);
	background-color : var(--bg);
}

/* RESET ------------------------------------------------------------------ */

* { box-sizing: border-box; }

:root, html, body, table, tr, td, img {
	margin: 0;
	padding: 0;
	border: 0;
}

/* let `body` do the scrolling instead of `html` so that modals can cover the scrollbars */
:root {
	width: 100%;
	height: 100%;
	overflow: hidden;
	font-family: arial, sans-serif;
}

body {
	width: 100%;
	height: 100%;

	/*
	For document-style UIs use `overflow-y: scroll` to avoid the annoying
	horizontal shifting of a centered page that happens between pages that fit
	the height of the window and those that don't. For split-screen-style UIs
	use `overflow-y: auto` or `hidden` instead because they use full-screen
	splitters that do the scrolling instead so the body itself should never
	have to scroll. We use `auto` by default to detect content overflow bugs.
	*/
	overflow: auto;
	/* overflow-y: scroll; */
}

img {
	display: block; /* don't align to surrounding text, that never made sense */
	max-width: 100%; /* make shrinkable */
}

hr { /* style hrs with just `color` */
	border: 0;
	border-top-width: 1px;
	border-top-style: solid;
	color: var(--border-light);
}

a { color: var(--fg-link); }
p { color: var(--fg-p); }

h1 { font-size: var(--font-size-h1); }
h2 { font-size: var(--font-size-h2); }
h3 { font-size: var(--font-size-h3); }

/* text selection */
:where(:is(.theme-dark, .theme-light .theme-inverted))::selection,
:where(:is(.theme-dark, .theme-light .theme-inverted)) ::selection
{
	color: #000;
	background-color: #ff0;
}

/* invertable images */
:where(:is(.theme-dark, .theme-light .theme-inverted) img)[invertable] {
	filter: invert(1);
}

/* make `resize: both` resizer dark */
.theme-dark::-webkit-resizer,
.theme-dark ::-webkit-resizer
{
	background: var(--bg-smoke);
}

/* FONTS ------------------------------------------------------------------ */

@font-face {
  font-family: 'opensans';
  font-weight: 100 900;
  font-style: normal;
  font-named-instance: 'Regular';
  src: url("opensans.var.woff2") format("woff2");
}

@font-face {
  font-family: 'opensans';
  font-weight: 100 900;
  font-style: italic;
  font-named-instance: 'Italic';
  src: url("opensans-italic.var.woff2") format("woff2");
}

.opensans {
	font-family: opensans, sans-serif;
}

/*
@font-face {
	font-family: "opensans";
	src: url("opensans-regular.woff2");
}

@font-face {
	font-family: "opensans";
	font-weight: bold;
	src: url("opensans-600.woff2");
}

@font-face {
	font-family: "opensans-condensed";
	src: url("opensanscondensed-light.woff2");
}

@font-face {
	font-family: "opensans-condensed";
	font-weight: bold;
	src: url("opensanscondensed-bold.woff2");
}

.opensans-condensed {
	font-family: opensans-condensed, arial, sans-serif;
}
*/

@font-face {
  font-family: 'inter-var';
  font-weight: 100 900;
  font-display: swap;
  font-style: normal;
  font-named-instance: 'Regular';
  src: url("inter-roman.var.woff2") format("woff2");
}

@font-face {
  font-family: 'inter-var';
  font-weight: 100 900;
  font-display: swap;
  font-style: italic;
  font-named-instance: 'Italic';
  src: url("inter-italic.var.woff2") format("woff2");
}

.inter {
	font-family: inter-var, sans-serif;
}

@font-face {
	font-family: "mi-round";
	font-style: normal;
	font-weight: 400;
	font-display: block;
	src: url("material-icons-round.woff2");
}

@font-face {
	font-family: "mi-sharp";
	font-style: normal;
	font-weight: 400;
	font-display: block;
	src: url("material-icons-sharp.woff2");
}

@font-face {
	font-family: "mi-outlined";
	font-style: normal;
	font-weight: 400;
	font-display: block;
	src: url("material-icons-outlined.woff2");
}

.mi, .mi-round, .mi-sharp, .mi-outlined {
	font-weight: normal;
	font-style: normal;
	font-size: 1.5em;
	vertical-align: -.25em;
	line-height: 1;
	letter-spacing: normal;
	text-transform: none;
	display: inline-block;
	white-space: nowrap;
	word-wrap: normal;
	direction: ltr;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-rendering: optimizeLegibility;
	font-feature-settings: "liga";
}

.mi, .mi-round { font-family: "mi-round"; }
.mi-sharp      { font-family: "mi-sharp"; }
.mi-outlined   { font-family: "mi-outlined"; }
.mi-fill       { font-variation-settings: 'FILL' 1; }
.mi-no-fill    { font-variation-settings: 'FILL' 0; }

/* TEXT ------------------------------------------------------------------- */

.pre       { white-space: pre; }
.pre-line  { white-space: pre-line; }
.xsmall    { font-size: var(--font-size-xsmall); }
.small     { font-size: var(--font-size-small); }
.smaller   { font-size: var(--font-size-smaller); }
.normal    { font-size: var(--font-size-normal); }
.large     { font-size: var(--font-size-large); line-height: 1.75; }
.xlarge    { font-size: var(--font-size-xlarge); line-height: 2; }
.tight     { line-height: 1.2; }
.littlebold{ font-weight: 500; }
.semibold  { font-weight: 600; }
.bold      { font-weight: bold; }
.extrabold { font-weight: 800; }
.italic    { font-style: italic; }
.no-bold   { font-weight: normal; }
.condensed { font-stretch: 75%; } /* only with var fonts */
.underline { text-decoration: underline; }
.strike    { text-decoration: line-through; }
.allcaps   { text-transform: uppercase; }
.noselect  { user-select: none; }

.mono      { font-family: monospace; }
.arial     { font-family: arial, sans-serif; }

/* use with ::before; inserts ZWSP to force line height on empty text */
.zwsp      { content: '\200b'; }

[gray]          { color: var(--fg-gray); }
.gray           { color: var(--fg-gray); }
.gray-inverted  { color: var(--fg-gray-inverted); }
.label          { color: var(--fg-label); }
.link           { color: var(--fg-link); }
.fg             { color: var(--fg); }
.fg-inverted    { color: var(--fg-inverted); }
.fg-error       { color: var(--bg-error); }
.white          { color: white; } /* when bg is always light eg. over pie chart */

/* ALIGN: INLINE ---------------------------------------------------------- */

.t-l        { text-align: start  ; }
.t-c        { text-align: center ; }
.t-r        { text-align: end    ; }
.t-j        { text-align: justify; }
.t-t        { vertical-align: top     ; }
.t-m        { vertical-align: middle  ; }
.t-b        { vertical-align: bottom  ; }
.t-baseline { vertical-align: baseline; }
.t-sup      { vertical-align: super   ; }
.t-sub      { vertical-align: sub     ; }

.float-l { float: left; }
.float-r { float: right; }

/* ALIGN: FLEXBOX --------------------------------------------------------- */

.h    { display: inline-flex; flex-flow: row   ; }
.v    { display: inline-flex; flex-flow: column; }

.h-l  { display: inline-flex; flex-flow: row   ; justify-content: flex-start   ; }
.h-r  { display: inline-flex; flex-flow: row   ; justify-content: flex-end     ; }
.h-c  { display: inline-flex; flex-flow: row   ; justify-content: center       ; }
.h-sb { display: inline-flex; flex-flow: row   ; justify-content: space-between; }
.h-s  { display: inline-flex; flex-flow: row   ; align-items: stretch          ; }
.h-t  { display: inline-flex; flex-flow: row   ; align-items: flex-start       ; }
.h-b  { display: inline-flex; flex-flow: row   ; align-items: flex-end         ; }
.h-m  { display: inline-flex; flex-flow: row   ; align-items: center           ; }
.h-bl { display: inline-flex; flex-flow: row   ; align-items: baseline         ; }

.v-t  { display: inline-flex; flex-flow: column; justify-content: flex-start   ; }
.v-b  { display: inline-flex; flex-flow: column; justify-content: flex-end     ; }
.v-m  { display: inline-flex; flex-flow: column; justify-content: center       ; }
.v-sb { display: inline-flex; flex-flow: column; justify-content: space-between; }
.v-s  { display: inline-flex; flex-flow: column; align-items: stretch          ; }
.v-l  { display: inline-flex; flex-flow: column; align-items: flex-start       ; }
.v-r  { display: inline-flex; flex-flow: column; align-items: flex-end         ; }
.v-c  { display: inline-flex; flex-flow: column; align-items: center           ; }

.S  { flex: 1; }
.S1 { flex: 1; }
.S2 { flex: 2; }
.S3 { flex: 3; }
.S4 { flex: 4; }
.S5 { flex: 5; }
.S6 { flex: 6; }

/* cross-axis align: flex & css grid */
.self-h-t { align-self: start  ; }
.self-h-m { align-self: center ; }
.self-h-b { align-self: end    ; }
.self-h-s { align-self: stretch; }
.self-v-l { align-self: start  ; }
.self-v-c { align-self: center ; }
.self-v-r { align-self: end    ; }
.self-v-s { align-self: stretch; }

.flex-wrap   { flex-wrap: wrap; }
.flex-nowrap { flex-flow: nowrap; }

.order-1    { order: 1; }
.order-2    { order: 1; }
.order-last { order: 99999; }

/* flex & grid */
.gap025   { grid-gap: var(--space-025); }
.gap05    { grid-gap: var(--space-05); }
.gap075   { grid-gap: var(--space-075); }
.gap      { grid-gap: var(--space-1); }
.gap2     { grid-gap: var(--space-2); }
.gap4     { grid-gap: var(--space-4); }
.gap8     { grid-gap: var(--space-8); }
.gap0     { grid-gap: 0; }

/* ALIGN: GRID ------------------------------------------------------------ */

.grid { display: inline-grid; }

.grid-1col { display: inline-grid; grid-template-columns: repeat(1, auto); }
.grid-2col { display: inline-grid; grid-template-columns: repeat(2, auto); }
.grid-3col { display: inline-grid; grid-template-columns: repeat(3, auto); }
.grid-4col { display: inline-grid; grid-template-columns: repeat(4, auto); }
.grid-5col { display: inline-grid; grid-template-columns: repeat(5, auto); }
.grid-6col { display: inline-grid; grid-template-columns: repeat(6, auto); }

.grid-l  { display: inline-grid; justify-content: start   ; }
.grid-r  { display: inline-grid; justify-content: end     ; }
.grid-c  { display: inline-grid; justify-content: center  ; }
.grid-sb { display: inline-grid; justify-content: space-between; }
.grid-s  { display: inline-grid; align-items: stretch     ; }
.grid-t  { display: inline-grid; align-items: start       ; }
.grid-b  { display: inline-grid; align-items: end         ; }
.grid-m  { display: inline-grid; align-items: center      ; }
.grid-bl { display: inline-grid; align-items: baseline    ; }

.x1 { grid-column-start: 1; }
.x2 { grid-column-start: 2; }
.x3 { grid-column-start: 3; }
.x4 { grid-column-start: 4; }
.x5 { grid-column-start: 5; }

.y1 { grid-row-start   : 1; }
.y2 { grid-row-start   : 2; }
.y3 { grid-row-start   : 3; }
.y4 { grid-row-start   : 4; }
.y5 { grid-row-start   : 5; }

.xx    { grid-column-end  : span 2; }
.xxx   { grid-column-end  : span 3; }
.xxxx  { grid-column-end  : span 4; }
.xxxxx { grid-column-end  : span 5; }

.yy    { grid-row-end     : span 2; }
.yyy   { grid-row-end     : span 3; }
.yyyy  { grid-row-end     : span 4; }
.yyyyy { grid-row-end     : span 5; }

/* inline-axis align: grid, block, absolute positioning. */
.self-h-l { justify-self: start ; }
.self-h-r { justify-self: end   ; }
.self-h-c { justify-self: center; }
.self-v-t { justify-self: start ; }
.self-v-b { justify-self: end   ; }
.self-v-m { justify-self: center; }

/* SIZING ----------------------------------------------------------------- */

[nowrap] {
	white-space: nowrap;
	overflow: hidden;
}
.nowrap {
	white-space: nowrap;
	overflow: hidden;
}

[nowrap-dots] {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.nowrap-dots {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.shrinks {
	min-width  : 0;
	min-height : 0;
}

.w1  { width: 1.25em; } /* mainly to keep changing icons fixated and aligned */
.w2  { width:  2.5em; }
.w4  { width:    5em; }
.w8  { width:   10em; }
.w16 { width:   20em; }
.w32 { width:   40em; }

/* BORDERS ---------------------------------------------------------------- */

.b       { border        : 1px solid var(--border-light); }
.b2      { border        : 2px solid var(--border-light); }
.b0      { border-width  : 0; }
.b-l     { border-left   : 1px solid var(--border-light); }
.b-r     { border-right  : 1px solid var(--border-light); }
.b-t     { border-top    : 1px solid var(--border-light); }
.b-b     { border-bottom : 1px solid var(--border-light); }

.b-l-0   { border-left-width   : 0; border-top-left-radius   : 0; border-bottom-left-radius : 0; }
.b-r-0   { border-right-width  : 0; border-top-right-radius  : 0; border-bottom-right-radius: 0; }
.b-t-0   { border-top-width    : 0; border-top-left-radius   : 0; border-top-right-radius   : 0; }
.b-b-0   { border-bottom-width : 0; border-bottom-left-radius: 0; border-bottom-right-radius: 0; }

.ro05    { border-radius: var(--space-05); }
.ro075   { border-radius: var(--space-075); }
.ro      { border-radius: var(--space-1); }
.ro2     { border-radius: var(--space-2); }
.round   { border-radius: 9999px; }
.ro0     { border-radius: 0; }

.ro-l-0  { border-top-left-radius   : 0; border-bottom-left-radius : 0; }
.ro-r-0  { border-top-right-radius  : 0; border-bottom-right-radius: 0; }
.ro-t-0  { border-top-left-radius   : 0; border-top-right-radius   : 0; }
.ro-b-0  { border-bottom-left-radius: 0; border-bottom-right-radius: 0; }

:where(.ro-group-h) > :not(:last-child)  { border-top-right-radius  : 0; border-bottom-right-radius: 0; }
:where(.ro-group-h) > :not(:first-child) { border-top-left-radius   : 0; border-bottom-left-radius : 0; }
:where(.ro-group-v) > :not(:last-child)  { border-bottom-left-radius: 0; border-bottom-right-radius: 0; }
:where(.ro-group-v) > :not(:first-child) { border-top-left-radius   : 0; border-top-right-radius   : 0; }

.b-solid     { border-style: solid; }
.b-dotted    { border-style: dotted; }
.b-dashed    { border-style: dashed; }
.b-invisible { border-style: none; }

.b-fg        { border-color: var(--fg); }
.b-darker    { border-color: var(--border-darker); }
.b-hover     { border-color: var(--border-hover); }

/* PADDINGS --------------------------------------------------------------- */

.p025   { padding: var(--space-025); }
.p05    { padding: var(--space-05); }
.p      { padding: var(--space-1); }
.p2     { padding: var(--space-2); }
.p4     { padding: var(--space-4); }
.p8     { padding: var(--space-8); }
.p0     { padding: 0; }

.p-t-05 { padding-top:    var(--space-05); }
.p-r-05 { padding-right:  var(--space-05); }
.p-b-05 { padding-bottom: var(--space-05); }
.p-l-05 { padding-left:   var(--space-05); }

.p-x-025 { padding-left:   var(--space-025); padding-right:  var(--space-025); }
.p-y-025 { padding-top:    var(--space-025); padding-bottom: var(--space-025); }
.p-x-05  { padding-left:   var(--space-05 ); padding-right:  var(--space-05 ); }
.p-y-05  { padding-top:    var(--space-05 ); padding-bottom: var(--space-05 ); }
.p-x     { padding-left:   var(--space-1  ); padding-right:  var(--space-1  ); }
.p-y     { padding-top:    var(--space-1  ); padding-bottom: var(--space-1  ); }
.p-x-2   { padding-left:   var(--space-2  ); padding-right:  var(--space-2  ); }
.p-y-2   { padding-top:    var(--space-2  ); padding-bottom: var(--space-2  ); }
.p-x-4   { padding-left:   var(--space-4  ); padding-right:  var(--space-4  ); }
.p-y-4   { padding-top:    var(--space-4  ); padding-bottom: var(--space-4  ); }
.p-x-8   { padding-left:   var(--space-8  ); padding-right:  var(--space-8  ); }
.p-y-8   { padding-top:    var(--space-8  ); padding-bottom: var(--space-8  ); }

.p-x-0   { padding-left   : 0; padding-right  : 0; }
.p-y-0   { padding-top    : 0; padding-bottom : 0; }

.p-t    { padding-top:    var(--space-1); }
.p-r    { padding-right:  var(--space-1); }
.p-b    { padding-bottom: var(--space-1); }
.p-l    { padding-left:   var(--space-1); }

.p-t-2  { padding-top:    var(--space-2); }
.p-r-2  { padding-right:  var(--space-2); }
.p-b-2  { padding-bottom: var(--space-2); }
.p-l-2  { padding-left:   var(--space-2); }

.p-t-4  { padding-top:    var(--space-4); }
.p-r-4  { padding-right:  var(--space-4); }
.p-b-4  { padding-bottom: var(--space-4); }
.p-l-4  { padding-left:   var(--space-4); }

.p-t-8  { padding-top:    var(--space-8); }
.p-r-8  { padding-right:  var(--space-8); }
.p-b-8  { padding-bottom: var(--space-8); }
.p-l-8  { padding-left:   var(--space-8); }

.p-t-0  { padding-top    : 0; }
.p-r-0  { padding-right  : 0; }
.p-b-0  { padding-bottom : 0; }
.p-l-0  { padding-left   : 0; }

/* MARGINS ---------------------------------------------------------------- */

.m      { margin: var(--space-1); }
.m05    { margin: var(--space-05); }
.m2     { margin: var(--space-2); }
.m4     { margin: var(--space-4); }
.m8     { margin: var(--space-8); }
.m0     { margin: 0; }

.m-x-05 { margin-left:   var(--space-05); margin-right:  var(--space-05); }
.m-y-05 { margin-top:    var(--space-05); margin-bottom: var(--space-05); }
.m-x    { margin-left:   var(--space-1); margin-right:  var(--space-1); }
.m-y    { margin-top:    var(--space-1); margin-bottom: var(--space-1); }
.m-x-2  { margin-left:   var(--space-2); margin-right:  var(--space-2); }
.m-y-2  { margin-top:    var(--space-2); margin-bottom: var(--space-2); }
.m-x-4  { margin-left:   var(--space-4); margin-right:  var(--space-4); }
.m-y-4  { margin-top:    var(--space-4); margin-bottom: var(--space-4); }
.m-x-8  { margin-left:   var(--space-8); margin-right:  var(--space-8); }
.m-y-8  { margin-top:    var(--space-8); margin-bottom: var(--space-8); }

.m-x-0  { margin-left:   0; margin-right:  0; }
.m-y-0  { margin-top:    0; margin-bottom: 0; }

.m-t-05 { margin-top:    var(--space-05); }
.m-r-05 { margin-right:  var(--space-05); }
.m-b-05 { margin-bottom: var(--space-05); }
.m-l-05 { margin-left:   var(--space-05); }

.m-t    { margin-top:    var(--space-1); }
.m-r    { margin-right:  var(--space-1); }
.m-b    { margin-bottom: var(--space-1); }
.m-l    { margin-left:   var(--space-1); }

.m-t-2  { margin-top:    var(--space-2); }
.m-r-2  { margin-right:  var(--space-2); }
.m-b-2  { margin-bottom: var(--space-2); }
.m-l-2  { margin-left:   var(--space-2); }

.m-t-4  { margin-top:    var(--space-4); }
.m-r-4  { margin-right:  var(--space-4); }
.m-b-4  { margin-bottom: var(--space-4); }
.m-l-4  { margin-left:   var(--space-4); }

.m-t-8  { margin-top:    var(--space-8); }
.m-r-8  { margin-right:  var(--space-8); }
.m-b-8  { margin-bottom: var(--space-8); }
.m-l-8  { margin-left:   var(--space-8); }

.m-x-auto { margin-left: auto; margin-right: auto; }
.m-l-auto { margin-left: auto }
.m-r-auto { margin-right: auto }

.m-t-0  { margin-top:    0; }
.m-r-0  { margin-right:  0; }
.m-b-0  { margin-bottom: 0; }
.m-l-0  { margin-left:   0; }

/* OUTLINE ---------------------------------------------------------------- */

.outline-focus {
	outline: 2px solid var(--outline-focused);
	outline-offset: -2px;
}

.no-outline { outline: none; }

/* OVERFLOW --------------------------------------------------------------- */

.scroll       { overflow  : scroll; }
.hscroll      { overflow-x: scroll; }
.vscroll      { overflow-y: scroll; }
.scroll-auto  { overflow  : auto; }
.hscroll-auto { overflow-x: auto; }
.vscroll-auto { overflow-y: auto; }
.clip         { overflow  : hidden; }
.clip-x       { overflow-x: hidden; }
.clip-y       { overflow-y: hidden; }
.noclip       { overflow  : visible; }
.noclip-x     { overflow-x: visible; }
.noclip-y     { overflow-y: visible; }

/* THIN SCROLLBARS -------------------------------------------------------- */

/* must set w/h to enable custom-drawn scrollbars */
.scroll-thin::-webkit-scrollbar {
	width : 8px;
	height: 8px;
}

.scroll-thin::-webkit-scrollbar-track {
	background-color: var(--bg1);
}

.scroll-thin::-webkit-scrollbar-thumb {
	background    : var(--bg2);
	border-color  : var(--bg2);
	border-radius : 50px;
}

/* POSITIONING ------------------------------------------------------------ */

.rel { position: relative; }
.abs { position: absolute; }

/* example: menu = z4, picker = z3, tooltip = z2, toolbox = z1 */
.z1  { z-index: 1; }
.z2  { z-index: 2; }
.z3  { z-index: 3; }
.z4  { z-index: 4; }
.z5  { z-index: 5; }

.overlay {
	position: absolute;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
}

/* VISIBILITY ------------------------------------------------------------- */

.show   { display: initial; } /* TODO: this is flaky! */
.hidden { display: none; }
.skip   { display: contents; }

.invisible { visibility: hidden; }
.visible   { visibility: visible; }

.click-through     { pointer-events: none; }
.click-through-off { pointer-events: all; }

/* FLAT BACKGROUNDS ------------------------------------------------------- */

.bg       { background: var(--bg); }
.bg-hover { background: var(--bg-hover); }
.bg1      { background: var(--bg1); }
.bg2      { background: var(--bg2); }
.bg-alt   { background: var(--bg-alt); }
.bg-smoke { background: var(--bg-smoke); }
.bg-fg    { background: var(--fg); } /* slider thumb, etc. */
.bg-link  { background: var(--fg-link); } /* slider track */
.no-bg    { background: none; }

.bg-error {
	background : var(--bg-error);
	color      : var(--fg-error);
}

/* IMAGE BACKGROUNDS ------------------------------------------------------ */

.bg-cover   { background-size: cover; }
.bg-contain { background-size: contain; }

.bg-c { background-position: center; }
.bg-t { background-position: top; }
.bg-r { background-position: right; }
.bg-b { background-position: bottom; }
.bg-l { background-position: left; }

.bg-no-repeat { background-repeat: no-repeat; }
.bg-repeat-x  { background-repeat: repeat-x; }
.bg-repeat-y  { background-repeat: repeat-y; }

/* FILTERS ---------------------------------------------------------------- */

.darken    { filter: brightness(0.85); }
.lighten   { filter: brightness(1.15); }
.no-filter { filter: none; }

.dim    { opacity: .5; }
.no-dim { opacity: .1; }

.op0    { opacity:  0; }
.op1    { opacity:  1; }

.op01   { opacity: .1; }
.op02   { opacity: .2; }
.op03   { opacity: .3; }
.op04   { opacity: .4; }
.op05   { opacity: .5; }
.op06   { opacity: .6; }
.op07   { opacity: .7; }
.op08   { opacity: .8; }
.op09   { opacity: .9; }

/* SHADOWS ---------------------------------------------------------------- */

.ring           { box-shadow:  0px  0px  2px var(--ring); }

.shadow         { box-shadow: var(--shadow-tooltip); }
.shadow-tooltip { box-shadow: var(--shadow-tooltip); }
.shadow-thumb   { box-shadow: var(--shadow-thumb); }
.shadow-menu    { box-shadow: var(--shadow-menu); }
.shadow-button  { box-shadow: var(--shadow-button); }
.shadow-pressed { box-shadow: var(--shadow-pressed); }
.shadow-modal   { box-shadow: var(--shadow-modal); }
.shadow-toolbox { box-shadow: var(--shadow-toolbox); }
.no-shadow      { box-shadow: none; }

/* TRANSFORMS ------------------------------------------------------------- */

.flip-h  { transform: scale(-1,  1); }
.flip-v  { transform: scale( 1, -1); }
.flip-hv { transform: scale(-1, -1); }
:where(.flip-h).flip-v { transform: scale(-1, -1); }

.rotate-90  { transform: rotate( 90deg); }
.rotate-180 { transform: rotate(180deg); }
.rotate-270 { transform: rotate(270deg); }

/* TRANSITIONS ------------------------------------------------------------ */

.ease {
	transition-property:
		top, left, right, bottom, transform,
		opacity, filter, background-color, border-color;
	transition-duration: .2s;
	transition-timing-function: ease;
}
.ease-out    { transition-timing-function: ease-out; }
.ease-linear { transition-timing-function: linear; }
.ease-01s    { transition-duration: .1s; }
.ease-05s    { transition-duration: .5s; }
.ease-1s     { transition-duration:  1s; }
.no-ease     { transition: all 0s; }
.ease-fw     { animation-fill-mode: forwards; }

/* ANIMATIONS ------------------------------------------------------------- */

.beat       { animation: 1s 1 ease-in-out beat; }
.bounce     { animation: 1s 1 cubic-bezier(0.28, 0.84, 0.42, 1) bounce; }
.fade       { animation: 1s 1 cubic-bezier(0.4, 0, 0.6, 1) fade; }
.beat-fade  { animation: 1s 1 cubic-bezier(0.4, 0, 0.6, 1) beat-fade; }
.flip       { animation: 1s 1 ease-in-out flip; }
.shake      { animation: 1s 1 linear shake; }
.spin       { animation: 1s 1 linear spin; }
.reverse    { animation-direction: reverse; }
.forever    { animation-iteration-count: infinite; }
.once       { animation-iteration-count: 1; }
.spin-pulse { animation: 1s infinite steps(8) spin; }

@keyframes beat {
  0%, 90% { transform: scale(1); }
  45%     { transform: scale(1.25); }
}

@keyframes bounce {
    0% { transform: scale(   1,    1) translateY( 0); }
   10% { transform: scale( 1.1,  0.9) translateY( 0); }
   30% { transform: scale( 0.9,  1.1) translateY(-0.5em); }
   50% { transform: scale(1.05, 0.95) translateY( 0); }
   57% { transform: scale(   1,    1) translateY(-0.125em); }
   64% { transform: scale(   1,    1) translateY( 0); }
  100% { transform: scale(   1,    1) translateY( 0); }
}

@keyframes fade {
  50% { opacity: 0.4; }
}

@keyframes beat-fade {
  0%, 100% { opacity: 0.4; transform: scale(1); }
  50%      { opacity:   1; transform: scale(1.125); }
}

@keyframes flip {
  50% { transform: rotate3d(0, 1, 0, -180deg); }
}

@keyframes shake {
   0%       { transform: rotate(-15deg); }
   4%       { transform: rotate( 15deg); }
   8%, 24%  { transform: rotate(-18deg); }
  12%, 28%  { transform: rotate( 18deg); }
  16%       { transform: rotate(-22deg); }
  20%       { transform: rotate( 22deg); }
  32%       { transform: rotate(-12deg); }
  36%       { transform: rotate( 12deg); }
  40%, 100% { transform: rotate(  0deg); }
}

@keyframes spin {
  0%   { transform: rotate(  0deg); }
  100% { transform: rotate(360deg); }
}

/* CURSORS ---------------------------------------------------------------- */

.arrow    { cursor: default; }
.hand     { cursor: pointer; }
.grab     { cursor: grab; }
.grabbing { cursor: grabbing; }

} /*layer*/


@layer state {

/* INTERACTION ------------------------------------------------------------ */

a:visited { color: var(--fg-link); }

/*
.hover-dim:hover     { opacity: .5; }
.hover-darken:hover  { filter: brightness(0.85); }
.hover-lighten:hover { filter: brightness(1.15); }
.hover-b:hover       { border-color: var(--border-hover); }
*/

.scroll-thin::-webkit-scrollbar-thumb:hover {
	background: var(--bg2-hover);
}

} /*layer*/
